#!/bin/bash

## Variable Resets
python_command=""

## [--help] Command
if [ "$1" = "--help" ]; then
    echo "Quatro Tetris Help"
    echo "-----------------------------------"
    echo "Command Operators"
    echo "-h or --help           | Shows this menu"
    echo "--py-command [command] | Disables the automatic detection of your Python Command and sets the Python Command value"
    echo ""
    echo "-----------------------------------"
    exit 1
fi

## [--py-command] Command
if [ "$1" = "--py-command" ]; then
    python_command="$2"
    echo "Python Command was set to $python_command"
    python_set="y"
fi

## [--debug] Command
if [[ "$@" = *" --debug"* ]]; then
    debug="y"
    echo="Debug mode is running..."
    sleep 1
    clear
fi

## Main Executable File

# Clears the screen to prepare for game run
clear

# Tells the user what part of this file is running
echo "Checking Python Version..."
sleep 1 # Adds fake delay so text displays longer

if [ "$python_set" != "y" ]; then
    # Detects the type of python command you have installed on your system
    if command -v python &>/dev/null; then # Checks to see if you use 'python'
        python_command="python" # If you use 'python', sets the python command to 'python'
    elif command -v python3 &>/dev/null; then # Checks to see if you use 'python3'
        python_command="python3" # If you use 'python3', sets the python command to 'python3'
    elif command -v py &>/dev/null; then # Checks to see if you use 'py'
        # Spits out an error stating that the 'py' command is not compatible with this script
        echo "Error 0001"
        echo "----------------------"
        echo "It appears as if you are using the 'py' command only as your python interpreter. Quatro Tetris is unable to run using the 'py' interpreter. Please install 'python' or 'python3'."
        exit 1
    elif command -v python2 &>/dev/null; then # Checks to see if you only have 'python2' installed
        # Spits out an error stating that Quatro Tetris cannot be run with Python 2
        echo "Error 0002"
        echo "----------------------"
        echo "It appears that you do not have a valid Python 3 command interpreter. Quatro Tetris is not able to be ran via Python 2. Please install a Python 3 Interpreter and try again."
        exit 1
    else
        # Spits out an error stating the Quatro Tetris cannot be ran without Python
        echo "Error 0003"
        echo "----------------------"
        echo "It appears that you do not have a valid Python 3 command interpreter. Quatro Tetris cannot be run without Python 3. Please install a Python 3 Interpreter and try again."
    fi
fi

# Prompts the user to make sure the system detected the correct python prefix
clear
read -p "Quatro Tetris has detected you use the '$python_command' prefix, is this correct? (y/n): " confirmation_1
if [ "$confirmation_1" = "n" ]; then
    echo "Try changing your configuration and try again. Or use --py-command and then your python command."
    exit 1
fi

# Clears the screen because the process was finished
clear

# Tells the user what part of the program is running
echo "Checking Linux Distribution..."

# For debug purposes, reads the contents of the '/etc/os-release' file into variables to detect the linux distribution that is running
source <(grep -E "^(NAME|VERSION)=" /etc/os-release) # Gets the Linux Distribution from /etc/os-release and extracts the 'NAME' and 'VERSION' variables
distro_name=$NAME # Renames the variable 'NAME'
distro_version=$VERSION # Renames the variable 'VERSION'
distro_info="$distro_name $distro_version" # Combines the new variables
unset NAME
unset VERSION

# Clears the screen because the process was finished
clear

# Prompts the user for what version of Quatro Tetris they want to run
read -p "Enter the game version number to run (e.g., v0.0.1, v0.0.2): " version
clear

# Tells the user what part of this file is running
echo "Checking Requirements..."
sleep 1 # Adds fake delay to show text on screen longer

# Sets the modules required for the program to be ran
modules=("pygame" "random" "time" "sound" "configparser" "sys")

# Checks weather or not those modules are installed, and installs them if they arent
for module in "${modules[@]}"; do
    if $python_command -c "import $module" 2>&1 | grep -q "ModuleNotFoundError"; then
        echo "$module - Not Found"
        echo "Installing $module..."
        pip install $module
    else
        echo "$module - Found"
    fi
done

# Adds fake delay to show text on screen longer
sleep 1

# Clears the screen because the process was finished
clear

# Tells the user what part of the program is running
echo "Checking Game Version..."
sleep 1

# Sets the filename based on the version selected by the user
python_file="quatro-tetris-$version.py"

# Clears the screen because the process has finished
clear

# Detects the version of the 'pygame' library the user is running and saves it to a variable
pygame_output=$(pip show pygame)
pygame_version=$(echo "$pygame_output" | awk '/version:/{print $2}')

# Detects the exact version of python the user is running and saves it to a variable
python_version=$($python_command --version 2>&1 | cut -d' ' -f2)

# Creates a temporarily file to store data
tempfile=$(mktemp)

# Runs the game
if [ -f "$python_file" ]; then
    if [ "$debug" = "y" ]; then
        echo "Game Version: $version"
        echo "Python Version: $python_version"
        echo "Pygame Version: $pygame_version"
        echo "Linux Distro: $distro_info"
        sleep 1.5
        clear
    fi
    echo "Running Quatro Tetris ($version)"
    sleep 1
    clear
    # Gets the output given when the game exits
    $python_command "$python_file" >(tee /dev/tty) 2> "$tempfile"
    # Checks the exit code given by the game
    exit_code=$?
    if [ $exit_code -ne 0 ]; then # Checks if the exit was due to an error
        # If the exit was due to an error, the following error code is given
        if [[ "$(cat "$tempfile")" =~ "SyntaxError" ]]; then
            echo "Error 0005"
            echo "----------------------"
            echo "A syntax error in the game code has occured. Please try again. If the issue presists, please contact the developer."
            if [ "$debug" = "y" ]; then
                echo ""
                echo "More Info"
                echo "----------------------"
                echo "Game Version: $version"
                echo "Python Version: $python_version"
                echo "Pygame Version: $pygame_version"
                echo "Linux Distro: $distro_info"
                echo ""
                echo "Python Output"
                echo "----------------------"
                cat "$tempfile"
            fi
            exit 1
        elif [[ "$(cat "$tempfile")" =~ "TypeError" ]]; then
            echo "Error 0006"
            echo "----------------------"
            echo "A type error in the game code has occured. Please try again. If the issue presists, please contact the developer."
            if [ "$debug" = "y" ]; then
                echo ""
                echo "More Info"
                echo "----------------------"
                echo "Game Version: $version"
                echo "Python Version: $python_version"
                echo "Pygame Version: $pygame_version"
                echo "Linux Distro: $distro_info"
                echo ""
                echo "Python Output"
                echo "----------------------"
                cat "$tempfile"
            fi
            exit 1
        elif [[ "$(cat "$tempfile")" =~ "IndexError" ]]; then
            echo "Error 0007"
            echo "----------------------"
            echo "A index error in the game code has occured. Please try again. If the issue presists, please contact the developer."
            if [ "$debug" = "y" ]; then
                echo ""
                echo "More Info"
                echo "----------------------"
                echo "Game Version: $version"
                echo "Python Version: $python_version"
                echo "Pygame Version: $pygame_version"
                echo "Linux Distro: $distro_info"
                echo ""
                echo "Python Output"
                echo "----------------------"
                cat "$tempfile"
            fi
            exit 1
        else
            clear
            echo "Error 0000"
            echo "----------------------"
            echo "A unexpected error in the game code has occured. Please try again. If the issue persists, please contact the developer."
            if [ "$debug" = "y" ]; then
                echo ""
                echo "More Info"
                echo "----------------------"
                echo "Game Version: $version"
                echo "Python Version: $python_version"
                echo "Pygame Version: $pygame_version"
                echo "Linux Distro: $distro_info"
                echo ""
                echo "Python Output"
                echo "----------------------"
                cat "$tempfile"
            fi
            exit 1
        fi
    fi
    sleep 1
    clear
    echo "Quatro Tetris $version"
    echo "----------------------"
    echo "Thanks for playing"
    echo "Give feedback on Twitter or Instagram by mentioning @zcraftelite"
    echo ""
else
    clear
    echo "Error 0004"
    echo "----------------------"
    echo "The Version of the game you are trying to run ($version), does not exist or is not currently downloaded. Please ensure you downloaded the entire Quatro-Tetris folder from the repository, and that you typed the version number in correctly (v#.#.#)"
    echo ""
    exit 1
fi